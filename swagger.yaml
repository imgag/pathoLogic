swagger: "2.0"
info:
  description: "Frontend for the pathoLogic pipeline"
  version: "0.1.0"
  title: "pathoLogic"
  contact:
    email: "caspar.gross@med.uni-tuebingen.de"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
basePath: "/v1"
tags:
- name: "sample"
  description: "Everything about samples"
- name: "status"
  description: "Process status"
- name: "result"
  description: "Results about samples"
schemes:
- "http"
- "https"
paths:
  /status:
    get:
      tags:
      - "status"
      summary: "Get list of all sample statuses"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                id:
                  type: "string"
                status:
                  $ref: "#/definitions/Status"
  
  /status/{sampleID}:
    get:
      tags:
      - "status"
      summary: "Get status for one or more projects"
      produces:
      - "application/json"
      parameters:
      - name: "sampleID"
        in: "path"
        description: "Comma seperated list of results to return"
        required: true
        type: "array"
        items:
          type: "string"
          minItems: 1
      responses:
        200:
          description: "successful"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
              status:
                $ref: "#/definitions/Sample"
        404:
          description: "Sample(s) not found"

  /samples:
    get:
      tags: 
      - "samples"
      summary: "List all samples"
      produces: 
      - "application/json"
      responses:
        200:
          description: "successful"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Sample"
    post:
      tags:
      - "samples"
      summary: "Create new samples"
      produces: 
      - "application/json"
      parameters: 
      - in: "body"
        name: "body"
        schema:
          type: "object"
          properties:
            config:
              $ref: "#/definitions/Config"
            samples:
              type: "array"
              items:
                $ref: "#/definitions/Sample"
      responses:
        200:
          description: "successful"
          schema:
            $ref: "#/definitions/Sample"
  /samples/{sampleID}/start:
    put:
      tags:
      - "sample"
      summary: "Starts one or multiple sample via ID"
      parameters: 
      - name: "sampleID"
        in: "path"
        required: true
        type: "array"
        items:
          type: "string"
          minItems: 1
      responses:
        200:
          description: "successful"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
              status:
                $ref: "#/definitions/Status"

  /result/{sampleID}:
    get:
      tags:
      - "sample"
      summary: "Lists results for given ids"
      parameters:
      - name: "sampleID"
        in: "path"
        description: "Comma seperated list of results to return"
        required: true
        type: "array"
        items:
          type: "string"
          minItems: 1
      responses:
        200:
          description: "successful"
          schema:
            type: "object"
            properties:
              id:
                type: "string"
              result:
                $ref: "#/definitions/Result"

definitions:
  Status:
    type: "string"
    enum:
      - "created"
      - "started"
      - "finished"
      - "error"
  Result:
    type: "object"
    properties:
      statistics_path:
        type: "string"
      zip_path:
        type: "string"
  Config:
    type: "object"
    properties:
      cpu:
        type: "integer"
        format: "int64"
        minimum: 1
        maximum: 10
  Sample:
    type: "object"
    properties:
      id:
        type: "string"
      author_email:
        type: "string"
        format: "email"
      created:
        type: "string"
        format: "date"
      last_updated:
        type: "string"
        format: "date"
      path_one:
        type: "string"
      path_two:
        type: "string"
externalDocs:
  description: "Find out more about pathoLogic"
  url: "http://github.com/imgag/pathoLogic"