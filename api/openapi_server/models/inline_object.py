# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.config import Config
from openapi_server.models.sample import Sample
from openapi_server import util

from openapi_server.models.config import Config  # noqa: E501
from openapi_server.models.sample import Sample  # noqa: E501

class InlineObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config=None, samples=None):  # noqa: E501
        """InlineObject - a model defined in OpenAPI

        :param config: The config of this InlineObject.  # noqa: E501
        :type config: Config
        :param samples: The samples of this InlineObject.  # noqa: E501
        :type samples: List[Sample]
        """
        self.openapi_types = {
            'config': Config,
            'samples': List[Sample]
        }

        self.attribute_map = {
            'config': 'config',
            'samples': 'samples'
        }

        self._config = config
        self._samples = samples

    @classmethod
    def from_dict(cls, dikt) -> 'InlineObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_object of this InlineObject.  # noqa: E501
        :rtype: InlineObject
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self):
        """Gets the config of this InlineObject.


        :return: The config of this InlineObject.
        :rtype: Config
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this InlineObject.


        :param config: The config of this InlineObject.
        :type config: Config
        """

        self._config = config

    @property
    def samples(self):
        """Gets the samples of this InlineObject.


        :return: The samples of this InlineObject.
        :rtype: List[Sample]
        """
        return self._samples

    @samples.setter
    def samples(self, samples):
        """Sets the samples of this InlineObject.


        :param samples: The samples of this InlineObject.
        :type samples: List[Sample]
        """

        self._samples = samples
