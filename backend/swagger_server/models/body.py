# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.config import Config  # noqa: F401,E501
from swagger_server.models.sample import Sample  # noqa: F401,E501
from swagger_server import util


class Body(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, config: Config=None, samples: List[Sample]=None):  # noqa: E501
        """Body - a model defined in Swagger

        :param config: The config of this Body.  # noqa: E501
        :type config: Config
        :param samples: The samples of this Body.  # noqa: E501
        :type samples: List[Sample]
        """
        self.swagger_types = {
            'config': Config,
            'samples': List[Sample]
        }

        self.attribute_map = {
            'config': 'config',
            'samples': 'samples'
        }

        self._config = config
        self._samples = samples

    @classmethod
    def from_dict(cls, dikt) -> 'Body':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The body of this Body.  # noqa: E501
        :rtype: Body
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self) -> Config:
        """Gets the config of this Body.


        :return: The config of this Body.
        :rtype: Config
        """
        return self._config

    @config.setter
    def config(self, config: Config):
        """Sets the config of this Body.


        :param config: The config of this Body.
        :type config: Config
        """

        self._config = config

    @property
    def samples(self) -> List[Sample]:
        """Gets the samples of this Body.


        :return: The samples of this Body.
        :rtype: List[Sample]
        """
        return self._samples

    @samples.setter
    def samples(self, samples: List[Sample]):
        """Sets the samples of this Body.


        :param samples: The samples of this Body.
        :type samples: List[Sample]
        """

        self._samples = samples
